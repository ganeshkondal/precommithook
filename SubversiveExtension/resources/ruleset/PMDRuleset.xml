<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<ruleset xmlns="http://pmd.sf.net/ruleset/1.0.0" name="SonarWayJavaPMD-ruleset" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd" xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd">
	<description>PMD Plugin preferences rule set</description>
	<rule ref="rulesets/java/sunsecure.xml/ArrayIsStoredDirectly">
    	<priority>2</priority>
   	</rule>
   	<rule ref="rulesets/java/optimizations.xml/AvoidArrayLoops">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/migrating.xml/AvoidAssertAsIdentifier">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/finalizers.xml/AvoidCallingFinalize">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingNPE">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/strictexception.xml/AvoidCatchingThrowable">
    	<priority>2</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/AvoidDecimalLiteralsInBigDecimalConstructor">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/strings.xml/AvoidDuplicateLiterals">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/migrating.xml/AvoidEnumAsIdentifier">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/logging-java.xml/AvoidPrintStackTrace">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/strictexception.xml/AvoidRethrowingException">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingNullPointerException">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/strictexception.xml/AvoidThrowingRawExceptionTypes">
   		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/BigIntegerInstantiation">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/BooleanInstantiation">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/BrokenNullCheck">
    	<priority>2</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/ClassCastExceptionWithToArray">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/naming.xml/ClassNamingConventions">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/clone.xml/CloneThrowsCloneNotSupportedException">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/design.xml/CompareObjectsWithEquals">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/design.xml/ConstructorCallsOverridableMethod">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/finalizers.xml/EmptyFinalizer">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/EmptyFinallyBlock">
    	<priority>2</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/EmptyIfStmt">
    	<priority>2</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/EmptyStaticInitializer">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/EmptySwitchStatements">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/EmptySynchronizedBlock">
    	<priority>2</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/EmptyTryBlock">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/EmptyWhileStmt">
    	<priority>2</priority>
   	</rule>
   	<rule ref="rulesets/java/design.xml/EqualsNull">
    	<priority>2</priority>
   	</rule>
   	<rule ref="rulesets/java/strictexception.xml/ExceptionAsFlowControl">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/finalizers.xml/FinalizeDoesNotCallSuperFinalize">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/finalizers.xml/FinalizeOverloaded">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/braces.xml/ForLoopsMustUseBraces">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/design.xml/IdempotentOperations">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/braces.xml/IfElseStmtsMustUseBraces">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/braces.xml/IfStmtsMustUseBraces">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/strings.xml/InefficientStringBuffering">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/design.xml/InstantiationToGetClass">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/migrating.xml/IntegerInstantiation">
    	<priority>3</priority>
   	</rule>
    <rule ref="rulesets/java/coupling.xml/LooseCoupling">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/design.xml/MissingStaticMethodInNonInstantiatableClass">
		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/codesize.xml/CyclomaticComplexity">
    	<properties>
        	<property name="reportLevel" value="10"/>
       	</properties>
	   	<priority>3</priority>   
   	</rule>
   	<rule ref="rulesets/java/codesize.xml/NcssMethodCount">
    	<properties>
        	<property name="minimum" value="50"/>
       	</properties>
	   	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/codesize.xml/NcssTypeCount">
   		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/migrating.xml/ReplaceEnumerationWithIterator">
   		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/migrating.xml/ReplaceHashtableWithMap">
   		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/migrating.xml/ReplaceVectorWithList">
   		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/typeresolution.xml/SignatureDeclareThrowsException">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/design.xml/SimplifyConditional">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/strings.xml/StringBufferInstantiationWithChar">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/strings.xml/StringInstantiation">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/strings.xml/StringToString">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/naming.xml/SuspiciousConstantFieldName">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/naming.xml/SuspiciousEqualsMethodName">
    	<priority>2</priority>
   	</rule>
   	<rule ref="rulesets/java/naming.xml/SuspiciousHashcodeMethodName">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/logging-java.xml/SystemPrintln">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/UnconditionalIfStatement">
    	<priority>2</priority>
   	</rule>
   	<rule ref="rulesets/java/design.xml/UnnecessaryLocalBeforeReturn">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/unusedcode.xml/UnusedFormalParameter">
    	<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/unusedcode.xml/UnusedLocalVariable">
    	<priority>3</priority>
   	</rule>
   	<!-- <rule ref="rulesets/java/controversial.xml/UnusedModifier">
    	<priority>4</priority>
 	</rule> -->
  	<rule ref="rulesets/java/basic.xml/UnusedNullCheckInEquals">
		<priority>3</priority>
  	</rule>
  	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateField">
		<priority>3</priority>
  	</rule>
  	<rule ref="rulesets/java/unusedcode.xml/UnusedPrivateMethod">
		<priority>3</priority>
  	</rule>
  	<rule ref="rulesets/java/optimizations.xml/UseArrayListInsteadOfVector">
		<priority>3</priority>
  	</rule>
  	<rule ref="rulesets/java/optimizations.xml/UseArraysAsList">
		<priority>3</priority>
  	</rule>
  	<rule ref="rulesets/java/logging-jakarta-commons.xml/UseCorrectExceptionLogging">
		<priority>3</priority>
  	</rule>
  	<rule ref="rulesets/java/strings.xml/UseIndexOfChar">
		<priority>3</priority>
  	</rule>
  	<rule ref="rulesets/java/basic.xml/UselessOperationOnImmutable">
    	<priority>2</priority>
  	</rule>
  	<rule ref="rulesets/java/basic.xml/UselessOverridingMethod">
		<priority>3</priority>
  	</rule>
  	<rule ref="rulesets/java/braces.xml/WhileLoopsMustUseBraces">
		<priority>3</priority>
  	</rule>
  	<!-- Newly added on 11 July 2013 starts -->
   	<rule ref="rulesets/java/design.xml/AvoidInstanceofChecksInCatchClause">
		<priority>4</priority>
   	</rule>   
	<rule ref="rulesets/java/typeresolution.xml/CloneMethodMustImplementCloneable">
   		<priority>3</priority>
	   		
   	</rule>
   		<rule ref="rulesets/java/design.xml/CloseResource">
   		<priority>3</priority>
   	</rule>
   	<rule ref="rulesets/java/basic.xml/CollapsibleIfStatements">
		<priority>4</priority>
  	</rule>
   	<rule ref="rulesets/java/imports.xml/DontImportJavaLang">
		<priority>4</priority>
  	</rule>  
   	<rule ref="rulesets/java/controversial.xml/DontImportSun">
   		<priority>4</priority>
   	</rule>    
   	<rule ref="rulesets/java/design.xml/FinalFieldCouldBeStatic">
		<priority>4</priority>
   	</rule>   
   	<rule ref="rulesets/java/naming.xml/AvoidDollarSigns">
    	<priority>4</priority>
   	</rule>   	  	
   	<rule ref="rulesets/java/design.xml/PreserveStackTrace">
		<priority>4</priority>
   	</rule>   
   	<rule ref="rulesets/java/design.xml/SingularField">
		<priority>4</priority>
   	</rule>    
   	<rule ref="rulesets/java/strings.xml/UnnecessaryCaseChange">
		<priority>4</priority>
   	</rule>   	
   	<rule ref="rulesets/java/strings.xml/UseStringBufferLength">
		<priority>4</priority>
   	</rule>    		 
   	<rule ref="rulesets/java/strings.xml/UselessStringValueOf">
		<priority>4</priority>
   	</rule>     	 			

    <!-- Rules Newly added as these rules are categorized as SS/Critical by default STARTS -->
    <!-- 
    <rule ref="rulesets/java/design.xml/AvoidReassigningParameters">
   		<priority>2</priority>
   	</rule>
   	<rule ref="rulesets/java/design.xml/ClassWithOnlyPrivateConstructorsShouldBeFinal">
   		<priority>1</priority>
   	</rule>   
   	<rule ref="rulesets/java/design.xml/EmptyMethodInAbstractClassShouldBeAbstract">
   		<priority>1</priority>
   	</rule>     
   	<rule ref="rulesets/java/design.xml/ReturnEmptyArrayRatherThanNull">
   		<priority>1</priority>
   	</rule>
   	<rule ref="rulesets/java/design.xml/AbstractClassWithoutAnyMethod">
   		<priority>1</priority>
   	</rule>
   	<rule ref="rulesets/java/design.xml/TooFewBranchesForASwitchStatement">
   		<priority>1</priority>
   	</rule>   
   	<rule ref="rulesets/java/logging-java.xml/MoreThanOneLogger">
   		<priority>2</priority>
   	</rule>   
   	<rule ref="rulesets/java/logging-java.xml/LoggerIsNotStaticFinal">
   		<priority>2</priority>
   	</rule>   
   	<rule ref="rulesets/java/migrating.xml/ByteInstantiation">
   		<priority>2</priority>
   	</rule>   
   	<rule ref="rulesets/java/migrating.xml/ShortInstantiation">
   		<priority>2</priority>
   	</rule>   
   	<rule ref="rulesets/java/migrating.xml/LongInstantiation">
   		<priority>2</priority>
   	</rule>   
   	<rule ref="rulesets/java/basic.xml/DoubleCheckedLocking">
   		<priority>1</priority>
   	</rule>   
   	<rule ref="rulesets/java/basic.xml/AvoidMultipleUnaryOperators">
   		<priority>2</priority>
   	</rule>   
   	<rule ref="rulesets/java/controversial.xml/AvoidUsingShortType">
   		<priority>5</priority>
   	</rule>   
   	<rule ref="rulesets/java/controversial.xml/AvoidUsingVolatile">
   		<priority>2</priority>
   	</rule>   
   	<rule ref="rulesets/java/controversial.xml/AvoidUsingNativeCode">
   		<priority>2</priority>
   	</rule>   
   	<rule ref="rulesets/java/controversial.xml/DoNotCallGarbageCollectionExplicitly">
   		<priority>2</priority>
   	</rule>   
   	<rule ref="rulesets/java/naming.xml/VariableNamingConventions">
   		<priority>1</priority>
   	</rule>   
   	<rule ref="rulesets/java/naming.xml/MethodNamingConventions">
   		<priority>1</priority>
   	</rule>   
   	<rule ref="rulesets/java/clone.xml/ProperCloneImplementation">
   		<priority>2</priority>
   	</rule>   
   	-->
   	<!-- Rules Newly added as these rules are categorized as SS/Critical by default ENDS -->
</ruleset>